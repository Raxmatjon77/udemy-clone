
stages:
  - build
  # - migrate
  - deploy

image: docker:20.10.24

services:
  - name: docker:20.10.24-dind
    alias: docker

variables:
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH/app:$IMAGE_TAG
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

before_script:
  - docker --version
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"


build:
  stage: build
  # tags:
  #   - gcp-vm
  script:
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
  only:
    - main

deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  before_script:
    - apk add --no-cache curl
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
  script:
    - echo "$GCLOUD_SERVICE_KEY" | base64 -d > "$CI_PROJECT_DIR"/gcloud-key.json
    - gcloud auth activate-service-account --key-file=gcloud-key.json
    - gcloud config set project "$GCP_PROJECT_ID"
    - gcloud container clusters get-credentials $GCP_CLUSTER_NAME" --zone='us-central1'
    - kubectl version --client
    - kubectl set image deployment/udemy-backend udemy-backend=$DOCKER_IMAGE
    - kubectl set env deployment/udemy-backend \
        DATABASE_URL="$DATABASE_URL" \
        JWT_AT_SECRET="$JWT_AT_SECRET" \
        JWT_RT_SECRET="$JWT_RT_SECRET" \
        SCRYPT_SALT="$SCRYPT_SALT" \
        SCRYPT_KEY="$SCRYPT_KEY" \
        MINIO_USER="$MINIO_USER" \
        MINIO_PASS="$MINIO_PASS" \
        MINIO_PORT="$MINIO_PORT" \
        MINIO_URL="$MINIO_URL" \
        MINIO_BUCKET_VIDEO="$MINIO_BUCKET_VIDEO"
    - kubectl rollout status deployment/udemy-backend
  only:
    - main